input {
  kafka {
    bootstrap_servers => "kafka:29092"
    topics => ["openweather"]
    codec => "json"
    group_id => "logstash-weather-group"
    consumer_threads => 1
    decorate_events => true
  }
}

filter {
  # Parse the JSON message
  if [message] {
    json {
      source => "message"
    }
  }

  # Add processing timestamp
  mutate {
    add_field => { 
      "processed_at" => "%{@timestamp}"
      "pipeline_version" => "1.0"
      "data_source" => "openweather_api"
    }
  }

  # Convert timestamp to proper date if exists
  if [timestamp] {
    date {
      match => [ "timestamp", "UNIX" ]
      target => "@timestamp"
    }
  }

  # Add temperature category based on temperature
  if [temp] {
    if [temp] < 0 {
      mutate { add_field => { "temp_category" => "freezing" } }
    } else if [temp] < 10 {
      mutate { add_field => { "temp_category" => "cold" } }
    } else if [temp] < 20 {
      mutate { add_field => { "temp_category" => "mild" } }
    } else if [temp] < 30 {
      mutate { add_field => { "temp_category" => "warm" } }
    } else {
      mutate { add_field => { "temp_category" => "hot" } }
    }
  }

  # Add humidity category
  if [humidity] {
    if [humidity] < 30 {
      mutate { add_field => { "humidity_category" => "dry" } }
    } else if [humidity] < 60 {
      mutate { add_field => { "humidity_category" => "comfortable" } }
    } else if [humidity] < 80 {
      mutate { add_field => { "humidity_category" => "humid" } }
    } else {
      mutate { add_field => { "humidity_category" => "very_humid" } }
    }
  }

  # Calculate heat index (simplified)
  if [temp] and [humidity] {
    if [temp] >= 27 {
      ruby {
        code => "
          temp = event.get('temp')
          humidity = event.get('humidity')
          heat_index = temp + (0.5 * (humidity - 50))
          event.set('heat_index', heat_index.round(2))
        "
      }
    }
  }

  # Add location coordinates (approximate for demo)
  if [city_name] {
    if [city_name] == "London" {
      mutate {
        add_field => { 
          "location" => "51.5074,-0.1278"
          "country_code" => "GB"
        }
      }
    } else if [city_name] == "Paris" {
      mutate {
        add_field => { 
          "location" => "48.8566,2.3522"
          "country_code" => "FR"
        }
      }
    } else if [city_name] == "Berlin" {
      mutate {
        add_field => { 
          "location" => "52.5200,13.4050"
          "country_code" => "DE"
        }
      }
    } else if [city_name] == "Barcelona" {
      mutate {
        add_field => { 
          "location" => "41.3851,2.1734"
          "country_code" => "ES"
        }
      }
    } else if [city_name] == "Amsterdam" {
      mutate {
        add_field => { 
          "location" => "52.3676,4.9041"
          "country_code" => "NL"
        }
      }
    } else if [city_name] == "Krakow" {
      mutate {
        add_field => { 
          "location" => "50.0647,19.9450"
          "country_code" => "PL"
        }
      }
    } else if [city_name] == "Vienna" {
      mutate {
        add_field => { 
          "location" => "48.2082,16.3738"
          "country_code" => "AT"
        }
      }
    }
  }

  # Remove unnecessary fields
  mutate {
    remove_field => [ "message", "host", "port", "[@metadata]" ]
  }
}

output {
  # Send to Elasticsearch
  elasticsearch {
    hosts => ["elasticsearch:9200"]
    index => "weather-data-%{+YYYY.MM.dd}"
    template_name => "weather-template"
    template_pattern => "weather-data-*"
    template => {
      "index_patterns" => ["weather-data-*"],
      "settings" => {
        "number_of_shards" => 1,
        "number_of_replicas" => 0
      },
      "mappings" => {
        "properties" => {
          "@timestamp" => { "type" => "date" },
          "city_name" => { "type" => "keyword" },
          "country" => { "type" => "keyword" },
          "temp" => { "type" => "float" },
          "feels_like" => { "type" => "float" },
          "humidity" => { "type" => "integer" },
          "pressure" => { "type" => "integer" },
          "wind_speed" => { "type" => "float" },
          "weather_description" => { "type" => "text" },
          "temp_category" => { "type" => "keyword" },
          "humidity_category" => { "type" => "keyword" },
          "location" => { "type" => "geo_point" }
        }
      }
    }
  }

  # Debug output to console
  stdout {
    codec => rubydebug {
      metadata => false
    }
  }
}
